# NS3 is disabled because the version in ubuntu precise does not lead
# to the same timings (precision error?)
# Reenable with
#   cmake -Denable_ns3
#   apt-get libns3-dev ns3
#
#
dist: bionic
language: cpp
compiler:
   - gcc
#  - clang
jdk:
   - openjdk11
addons:
  apt:
    packages:
    - cmake
    - valgrind
    - gfortran
    - libboost-dev
    - libboost-all-dev
    - libdw-dev
    - libevent-dev
    - libunwind8-dev
    - pybind11-dev
  homebrew:
    packages:
    - python
  coverity_scan:
    project:
      name: "simgrid/simgrid"
      description: "Build submitted via Travis CI"
    notification_email: martin.quinson@ens-rennes.fr
    build_command_prepend: "cmake -Denable_documentation=OFF -Denable_coverage=ON -Denable_java=OFF -Denable_model-checking=OFF -Denable_lua=OFF -Denable_compile_optimizations=ON -Denable_smpi=ON -Denable_smpi_MPICH3_testsuite=OFF -Denable_compile_warnings=OFF ."
    build_command:   "make VERBOSE=1"
    branch_pattern: coverity

jobs:
  include:
    - os: linux
      script:
      - sudo apt-get update -qq
      - sudo apt-get install cmake valgrind gfortran libboost-dev libboost-all-dev libdw-dev libevent-dev libunwind8-dev pybind11-dev
      - (cmake -Denable_model-checking=ON  -Denable_documentation=OFF -Denable_coverage=ON -Denable_lua=OFF -Denable_compile_optimizations=ON -Denable_smpi=ON -Denable_smpi_MPICH3_testsuite=ON -Denable_compile_warnings=ON -DLTO_EXTRA_FLAG="auto" . || (echo XXX CMakeOutput.log; cat /home/travis/build/simgrid/simgrid/CMakeFiles/CMakeOutput.log; echo XXX CMakeError.log;cat /home/travis/build/simgrid/simgrid/CMakeFiles/CMakeError.log; exit 1))
      - make -j$(nproc) VERBOSE=1 all && make -j$(nproc) tests && ctest -j$(nproc) --output-on-failure
    - os: windows
      script:
      - mv "C:/Program Files/Git/usr/bin/sh.exe" "sh-ignored.exe"
      - df -h
      - du -hs /tmp || true
      - choco install boost-msvc-12 python jdk8
      - export CC=gcc
      - export CXX=g++
      - export PATH='C:\Python38':'C:\local\boost_1_58_0':$PATH
      - export BOOST_LIBRARYDIR='C:/local/boost_1_58_0/lib64-msvc-12.0'
      - export BOOST_INCLUDEDIR='C:/local/boost_1_58_0/include'
      - export JAVA_HOME='C:/Program Files/Java/jdk1.8.0_211'
      # We need pybind11. SimGrid will pick it automatically if the subdir is here
      # - git clone --depth=1 https://github.com/pybind/pybind11.git
      - cmake -G "MinGW Makefiles" -Denable_java=ON -Denable_msg=ON -Denable_lua=OFF -Denable_documentation=OFF -Denable_smpi=OFF -Denable_mallocators=OFF -Denable_lto=OFF .
      - df -h
      - du -hs /tmp || true
      - mingw32-make.exe VERBOSE=1 java-all && ctest --output-on-failure -R java
      # - mingw32-make.exe VERBOSE=1 python-bindings && ctest --output-on-failure -R python
      - df -h
      - du -hc /tmp || true
    - os: osx
      osx_image: xcode11.3
      script:
      - export LIBRARY_PATH=/usr/local/lib/gcc/9
      - cmake -Denable_model-checking=OFF -Denable_documentation=OFF -Denable_coverage=ON -Denable_lua=OFF -Denable_compile_optimizations=ON -Denable_smpi=ON -Denable_smpi_MPICH3_testsuite=OFF -Denable_compile_warnings=ON .
      - make -j2 VERBOSE=1 all && make -j2 tests && ctest -j2 --output-on-failure
notifications:
  recipients:
    - martin.quinson@ens-rennes.fr
  email:
    on_success: change
    on_failure: always
  irc:
    on_success: change
    on_failure: always
    channels:
      - "irc.debian.org#simgrid"
  template:
    - "%{repository}/%{branch} (%{commit} - %{author}): %{message}"
